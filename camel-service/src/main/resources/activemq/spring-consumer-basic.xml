<?xml version="1.0" encoding="UTF-8"?>
<!-- 查找最新的schemaLocation 访问 http://www.springframework.org/schema/ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">

	
	<!-- <amq:redeliveryPolicy id="redeliveryPolicy" destination="#defaultDestination" 
		redeliveryDelay="100" maximumRedeliveries="4" /> -->

	<!-- Wait 15 seconds first re-delivery, then 45, 135, 405, 1215, 3645 seconds -->
	<bean id="amqRedeliveryPolicyConsumer" class="org.apache.activemq.RedeliveryPolicy">
		<!-- 重连时间间隔递增倍数，只有值大于1和启用useExpone -->
		<property name="backOffMultiplier" value="1" />
		<!-- 初始重发延迟时间 -->
		<property name="initialRedeliveryDelay" value="15000" />
		<!-- 最大重传次数，达到最大重连次数后抛出异常。为-1时不限制次数，为0时表示不进行重传。 -->
		<property name="maximumRedeliveries" value="-1" />
		<property name="queue" value="*" />
		<property name="redeliveryDelay" value="5000" />
		<!-- 启用指数倍数递增的方式增加延迟时间。 -->
		<property name="useExponentialBackOff" value="true" />
	</bean>
	
	<!-- PreFetch预拉取 -->
	<bean id="amqPrefetchPolicyConsumer" class="org.apache.activemq.ActiveMQPrefetchPolicy">
		<property name="queuePrefetch" value="100" />
		<property name="topicPrefetch" value="100" />
		<property name="maximumPendingMessageLimit" value="10000" />
	</bean>
	
	<!--<bean id="jmsTransactionManagerConsumer"-->
	        <!--class="org.springframework.jms.connection.JmsTransactionManager">-->
	    <!--&lt;!&ndash; can also refer to amq.connectionFactory &ndash;&gt;-->
	    <!--<property name="connectionFactory" ref="jmsConnectionFactoryConsumer" />-->
	<!--</bean>	-->
	
	  <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <bean id="amqConnectionFactoryConsumer" class="org.apache.activemq.ActiveMQConnectionFactory">
       <!-- <property name="brokerURL" value="failover:(tcp://172.30.11.77:61616,tcp://172.30.0.21:61616,tcp://172.30.11.75:61616)?initialReconnectDelay=1000"/> -->
        <property name="brokerURL" value="${camel.activemq.brokerURL}"/>
        <property name="userName" value="admin" />
		<property name="password" value="admin" />
		<property name="useAsyncSend" value="true"/>
		<property name="optimizeAcknowledge" value="true" />
		<property name="optimizeAcknowledgeTimeOut" value="300" />
		<property name="redeliveryPolicy" ref="amqRedeliveryPolicyConsumer" />
		<property name="prefetchPolicy" ref="amqPrefetchPolicyConsumer" />
    </bean>
    
 <!--    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactoryBean">  
	    <property name="connectionFactory" ref="targetConnectionFactory"/>  
	    <property name="maxConnections" value="10"/>  
	</bean>   -->
    
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="jmsConnectionFactoryConsumer" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="amqConnectionFactoryConsumer"/>
    </bean>
    

</beans>  